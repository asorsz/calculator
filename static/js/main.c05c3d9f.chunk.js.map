{"version":3,"sources":["components/button-data.js","components/Buttons.js","components/Display.js","components/App.js","index.js"],"names":["buttonData","id","text","type","Buttons","props","map","button","i","className","data-type","onClick","e","handleButtonPress","Display","display","App","useState","setDisplay","previousButtonID","setPreviousButtonID","previousButtonType","setPreviousButtonType","x","setX","op","setOp","y","setY","result","setResult","useEffect","parseFloat","buttonID","target","buttonText","textContent","buttonType","dataset","document","getElementById","classList","remove","includes","toString","add","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.c05c3d9f.chunk.js","sourcesContent":["const buttonData = [\r\n  { id: 'add', text: '+', type: 'operator' },\r\n  { id: 'subtract', text: '-', type: 'operator' },\r\n  { id: 'multiply', text: '\\u00D7', type: 'operator' },\r\n  { id: 'divide', text: '\\u00F7', type: 'operator' },\r\n  { id: 'seven', text: '7', type: 'number' },\r\n  { id: 'eight', text: '8', type: 'number' },\r\n  { id: 'nine', text: '9', type: 'number' },\r\n  { id: 'four', text: '4', type: 'number' },\r\n  { id: 'five', text: '5', type: 'number' },\r\n  { id: 'six', text: '6', type: 'number' },\r\n  { id: 'one', text: '1', type: 'number' },\r\n  { id: 'two', text: '2', type: 'number' },\r\n  { id: 'three', text: '3', type: 'number' },\r\n  { id: 'zero', text: '0', type: 'number' },\r\n  { id: 'decimal', text: '.', type: 'decimal' },\r\n  { id: 'clear', text: 'AC', type: 'clear' },\r\n  { id: 'equals', text: '=', type: 'equals' },\r\n];\r\n\r\nexport default buttonData;","import buttonData from './button-data'\r\nimport '../css/Buttons.css';\r\n\r\nconst Buttons = (props) => {\r\n  return (\r\n    <div id=\"buttons\">\r\n      {buttonData.map((button, i) => (\r\n        <button\r\n          key={i}\r\n          id={button.id}\r\n          className={button.type}\r\n          data-type={button.type}\r\n          onClick={(e) => props.handleButtonPress(e)}\r\n        >{button.text}</button>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Buttons;","import '../css/Display.css';\r\n\r\nconst Display = (props) => {\r\n  return (\r\n    <div id=\"display\">{props.display}</div>\r\n  );\r\n};\r\n\r\nexport default Display;","import { useEffect, useState } from 'react';\nimport '../css/App.css';\nimport Buttons from './Buttons';\nimport Display from './Display';\n\nconst App = () => {\n  const [display, setDisplay] = useState('0');\n  const [previousButtonID, setPreviousButtonID] = useState('')\n  const [previousButtonType, setPreviousButtonType] = useState('');\n  const [x, setX] = useState(0);\n  const [op, setOp] = useState('');\n  const [y, setY] = useState(0);\n  const [result, setResult] = useState(0);\n\n  useEffect(() => {\n    if (!op) setX(parseFloat(display));\n    if (op && previousButtonType !== 'equals') {\n      setY(parseFloat(display));\n    }\n  }, [op, display, previousButtonType])\n\n  useEffect(() => {\n    if (op === 'add') setResult(x + y);\n    if (op === 'subtract') setResult(x - y);\n    if (op === 'multiply') setResult(x * y);\n    if (op === 'divide')  setResult(x / y);\n  }, [x, op, y])\n  \n  const handleButtonPress = (e) => {\n    const buttonID = e.target.id;\n    const buttonText = e.target.textContent;\n    const buttonType = e.target.dataset.type;\n    \n    if (previousButtonType === 'operator') {\n      document.getElementById(previousButtonID).classList.remove('depressed');\n    }\n\n    if (buttonType === 'number') {\n      if (\n        display === '0' ||\n        previousButtonType === 'equals' ||\n        (previousButtonType === 'operator' && display !== '-')\n      ) {\n        setDisplay(buttonText);\n      } else {\n        setDisplay(display + buttonText);\n      }\n    }\n\n    if (buttonType === 'decimal') {\n      if (!display.includes('.')) {\n        setDisplay(display + buttonText);\n      }\n      if (\n        previousButtonType === 'operator' ||\n        previousButtonType === 'equals'\n      ) {\n        setDisplay('0.');\n      }\n    }     \n\n    if (buttonType === 'operator') {\n      if (\n        op &&\n        previousButtonType !== 'operator' &&\n        previousButtonType !== 'equals'\n      ) {\n        setDisplay(result.toString());\n        setX(result);\n      }      \n      if (\n        buttonID === 'subtract' &&\n        previousButtonType === 'operator'\n      ) {\n        setDisplay('-');\n      } else if (display === '-') {\n        setDisplay(x);\n        setOp(buttonID);\n      } else {\n        setOp(buttonID);\n      }\n      e.target.classList.add('depressed');\n    }\n\n    if (buttonType === 'equals') {\n      setDisplay(result.toString());\n      setX(result);\n    }\n    \n    if (buttonType === 'clear') {\n      setX(0);\n      setY(0);\n      setOp('');\n      setResult(0);\n      setDisplay('0');\n    }\n\n    setPreviousButtonID(buttonID);\n    setPreviousButtonType(buttonType);\n  }\n\n  return (\n    <div id=\"calculator\">\n      <Display display={display} />\n      <Buttons handleButtonPress={handleButtonPress} />\n      \n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}